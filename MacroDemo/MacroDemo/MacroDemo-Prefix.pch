//
//  MacroDemo-Prefix.pch
//  MacroDemo
//
//  Created by josscii on 2018/6/7.
//  Copyright © 2018年 josscii. All rights reserved.
//

#ifndef MacroDemo_Prefix_pch
#define MacroDemo_Prefix_pch

#import <UIKit/UIKit.h>

#pragma mark -
#pragma mark project convience

#define app_delegate ((AppDelegate *)[[UIApplication sharedApplication] delegate])
#define app_window ((UIWindow *)[[UIApplication sharedApplication] delegate] window])

#pragma mark -
#pragma mark safe surance

CG_INLINE BOOL
isarray(id x) {
    return [x isKindOfClass:[NSArray class]];
}

CG_INLINE BOOL
isdictionary(id x) {
    return [x isKindOfClass:[NSDictionary class]];
}

CG_INLINE BOOL
isstring(id x) {
    return [x isKindOfClass:[NSString class]];
}

#pragma mark -
#pragma mark gcd

#ifndef dispatch_queue_async_safe
#define dispatch_queue_async_safe(queue, block)\
if (dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL) == dispatch_queue_get_label(queue)) {\
block();\
} else {\
dispatch_async(queue, block);\
}
#endif

#ifndef dispatch_main_async_safe
#define dispatch_main_async_safe(block) dispatch_queue_async_safe(dispatch_get_main_queue(), block)
#endif

#pragma mark -
#pragma mark iOS Version

#define IOS_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define IOS_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define IOS_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define IOS_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define IOS_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)

#pragma mark -
#pragma mark UIColor

// example usage: UIColorFromHex(0x9daa76)
#define UIColorFromHexWithAlpha(hexValue,a) [UIColor colorWithRed:((float)((hexValue & 0xFF0000) >> 16))/255.0 green:((float)((hexValue & 0xFF00) >> 8))/255.0 blue:((float)(hexValue & 0xFF))/255.0 alpha:a]
#define UIColorFromHex(hexValue)            UIColorFromHexWithAlpha(hexValue,1.0)
#define UIColorFromRGBA(r,g,b,a)            [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]
#define UIColorFromRGB(r,g,b)               UIColorFromRGBA(r,g,b,1.0)

#pragma mark -
#pragma mark CG

#define ScreenScale ([[UIScreen mainScreen] scale])

CG_INLINE CGFloat
scaleCeil(CGFloat floatValue) {
    CGFloat flattedValue = ceil(floatValue * ScreenScale) / ScreenScale;
    return flattedValue;
}

CG_INLINE CGFloat
scaleFloor(CGFloat floatValue) {
    CGFloat flattedValue = floor(floatValue * ScreenScale) / ScreenScale;
    return flattedValue;
}

#endif /* MacroDemo_Prefix_pch */
